-- MySQL Script generated by MySQL Workbench
-- Tue Jun 27 17:59:28 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema airbnbDB
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema airbnbDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `airbnbDB` DEFAULT CHARACTER SET utf8 ;
USE `airbnbDB` ;

-- -----------------------------------------------------
-- Table `airbnbDB`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `airbnbDB`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `address` VARCHAR(45) NULL,
  `register_date` DATE NOT NULL,
  `is_admin` TINYINT(1) NOT NULL DEFAULT 0,
  `host_application` TINYINT NOT NULL DEFAULT 0 COMMENT '- 0 he is just seeking for apartments\n- 1 has application for host pending \n- 2 he has application accepted and he is host.',
  `image_url` VARCHAR(300) NULL,
  `firstName` VARCHAR(45) NOT NULL,
  `lastName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `airbnbDB`.`listings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `airbnbDB`.`listings` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `thumbnail_url` VARCHAR(400) NULL,
  `medium_url` VARCHAR(400) NULL,
  `price` FLOAT NOT NULL,
  `accommodates` VARCHAR(45) NULL,
  `bathrooms` INT NULL,
  `bedrooms` INT NOT NULL,
  `bed_type` INT NULL,
  `number_of_reviews` INT NULL,
  `review_scores_rating` FLOAT NULL,
  `street` VARCHAR(45) NOT NULL,
  `description` VARCHAR(1000) NULL,
  `longitude` FLOAT NOT NULL,
  `latitude` FLOAT NOT NULL,
  `amenities` VARCHAR(300) NULL,
  `users_id` INT NOT NULL,
  PRIMARY KEY (`id`, `users_id`),
  INDEX `fk_listings_users1_idx` (`users_id` ASC) VISIBLE,
  CONSTRAINT `fk_listings_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `airbnbDB`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `airbnbDB`.`reviews`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `airbnbDB`.`reviews` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `rating` FLOAT NOT NULL,
  `comment` VARCHAR(300) NULL,
  `date` DATE NOT NULL,
  `renter_id` INT NOT NULL,
  `listings_id` INT NOT NULL,
  `host_id` INT NOT NULL,
  PRIMARY KEY (`id`, `renter_id`, `listings_id`, `host_id`),
  INDEX `fk_reviews_users1_idx` (`renter_id` ASC) VISIBLE,
  INDEX `fk_reviews_listings1_idx` (`listings_id` ASC, `host_id` ASC) VISIBLE,
  CONSTRAINT `fk_reviews_users1`
    FOREIGN KEY (`renter_id`)
    REFERENCES `airbnbDB`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reviews_listings1`
    FOREIGN KEY (`listings_id` , `host_id`)
    REFERENCES `airbnbDB`.`listings` (`id` , `users_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `airbnbDB`.`bookings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `airbnbDB`.`bookings` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `arrival_date` DATE NOT NULL,
  `departure_date` DATE NOT NULL,
  `renter_id` INT NOT NULL,
  `listings_id` INT NOT NULL,
  `host_id` INT NOT NULL,
  PRIMARY KEY (`id`, `renter_id`, `listings_id`, `host_id`),
  INDEX `fk_bookings_users1_idx` (`renter_id` ASC) VISIBLE,
  INDEX `fk_bookings_listings1_idx` (`listings_id` ASC, `host_id` ASC) VISIBLE,
  CONSTRAINT `fk_bookings_users1`
    FOREIGN KEY (`renter_id`)
    REFERENCES `airbnbDB`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_bookings_listings1`
    FOREIGN KEY (`listings_id` , `host_id`)
    REFERENCES `airbnbDB`.`listings` (`id` , `users_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `airbnbDB`.`messages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `airbnbDB`.`messages` (
  `id` INT NOT NULL,
  `message` VARCHAR(1000) NOT NULL,
  `datetime_sent` DATETIME NOT NULL,
  `sender_id` INT NOT NULL,
  `reciever_id` INT NOT NULL,
  PRIMARY KEY (`id`, `sender_id`, `reciever_id`),
  INDEX `fk_messages_users1_idx` (`sender_id` ASC) VISIBLE,
  INDEX `fk_messages_users2_idx` (`reciever_id` ASC) VISIBLE,
  CONSTRAINT `fk_messages_users1`
    FOREIGN KEY (`sender_id`)
    REFERENCES `airbnbDB`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_messages_users2`
    FOREIGN KEY (`reciever_id`)
    REFERENCES `airbnbDB`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
